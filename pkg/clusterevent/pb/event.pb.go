// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: pkg/clusterevent/pb/event.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ClusterEventType int32

const (
	ClusterEventType_ClusterEventTypeNone          ClusterEventType = 0
	ClusterEventType_ClusterEventTypeVersionChange ClusterEventType = 1 // 集群配置版本已改变
)

// Enum value maps for ClusterEventType.
var (
	ClusterEventType_name = map[int32]string{
		0: "ClusterEventTypeNone",
		1: "ClusterEventTypeVersionChange",
	}
	ClusterEventType_value = map[string]int32{
		"ClusterEventTypeNone":          0,
		"ClusterEventTypeVersionChange": 1,
	}
)

func (x ClusterEventType) Enum() *ClusterEventType {
	p := new(ClusterEventType)
	*p = x
	return p
}

func (x ClusterEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClusterEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_clusterevent_pb_event_proto_enumTypes[0].Descriptor()
}

func (ClusterEventType) Type() protoreflect.EnumType {
	return &file_pkg_clusterevent_pb_event_proto_enumTypes[0]
}

func (x ClusterEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClusterEventType.Descriptor instead.
func (ClusterEventType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_clusterevent_pb_event_proto_rawDescGZIP(), []int{0}
}

type SlotEventType int32

const (
	SlotEventType_SlotEventTypeNone     SlotEventType = 0
	SlotEventType_SlotEventTypeInit     SlotEventType = 1 // 节点领导触发
	SlotEventType_SlotEventTypeAdd      SlotEventType = 2
	SlotEventType_SlotEventTypeRemove   SlotEventType = 3
	SlotEventType_SlotEventTypeElection SlotEventType = 4 // 槽选举
)

// Enum value maps for SlotEventType.
var (
	SlotEventType_name = map[int32]string{
		0: "SlotEventTypeNone",
		1: "SlotEventTypeInit",
		2: "SlotEventTypeAdd",
		3: "SlotEventTypeRemove",
		4: "SlotEventTypeElection",
	}
	SlotEventType_value = map[string]int32{
		"SlotEventTypeNone":     0,
		"SlotEventTypeInit":     1,
		"SlotEventTypeAdd":      2,
		"SlotEventTypeRemove":   3,
		"SlotEventTypeElection": 4,
	}
)

func (x SlotEventType) Enum() *SlotEventType {
	p := new(SlotEventType)
	*p = x
	return p
}

func (x SlotEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SlotEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_clusterevent_pb_event_proto_enumTypes[1].Descriptor()
}

func (SlotEventType) Type() protoreflect.EnumType {
	return &file_pkg_clusterevent_pb_event_proto_enumTypes[1]
}

func (x SlotEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SlotEventType.Descriptor instead.
func (SlotEventType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_clusterevent_pb_event_proto_rawDescGZIP(), []int{1}
}

type NodeEventType int32

const (
	NodeEventType_NodeEventTypeNone   NodeEventType = 0
	NodeEventType_NodeEventTypeInit   NodeEventType = 1
	NodeEventType_NodeEventTypeAdd    NodeEventType = 2
	NodeEventType_NodeEventTypeRemove NodeEventType = 3
)

// Enum value maps for NodeEventType.
var (
	NodeEventType_name = map[int32]string{
		0: "NodeEventTypeNone",
		1: "NodeEventTypeInit",
		2: "NodeEventTypeAdd",
		3: "NodeEventTypeRemove",
	}
	NodeEventType_value = map[string]int32{
		"NodeEventTypeNone":   0,
		"NodeEventTypeInit":   1,
		"NodeEventTypeAdd":    2,
		"NodeEventTypeRemove": 3,
	}
)

func (x NodeEventType) Enum() *NodeEventType {
	p := new(NodeEventType)
	*p = x
	return p
}

func (x NodeEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_clusterevent_pb_event_proto_enumTypes[2].Descriptor()
}

func (NodeEventType) Type() protoreflect.EnumType {
	return &file_pkg_clusterevent_pb_event_proto_enumTypes[2]
}

func (x NodeEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeEventType.Descriptor instead.
func (NodeEventType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_clusterevent_pb_event_proto_rawDescGZIP(), []int{2}
}

type NodeStatus int32

const (
	NodeStatus_NodeStatusWaitInit NodeStatus = 0 // 等待初始化
	NodeStatus_NodeStatusDone     NodeStatus = 1
)

// Enum value maps for NodeStatus.
var (
	NodeStatus_name = map[int32]string{
		0: "NodeStatusWaitInit",
		1: "NodeStatusDone",
	}
	NodeStatus_value = map[string]int32{
		"NodeStatusWaitInit": 0,
		"NodeStatusDone":     1,
	}
)

func (x NodeStatus) Enum() *NodeStatus {
	p := new(NodeStatus)
	*p = x
	return p
}

func (x NodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_clusterevent_pb_event_proto_enumTypes[3].Descriptor()
}

func (NodeStatus) Type() protoreflect.EnumType {
	return &file_pkg_clusterevent_pb_event_proto_enumTypes[3]
}

func (x NodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeStatus.Descriptor instead.
func (NodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_clusterevent_pb_event_proto_rawDescGZIP(), []int{3}
}

type Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version   uint32  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`     // 配置版本
	SlotCount uint32  `protobuf:"varint,2,opt,name=slotCount,proto3" json:"slotCount,omitempty"` // 槽位数量
	Epoch     uint32  `protobuf:"varint,3,opt,name=epoch,proto3" json:"epoch,omitempty"`         // 集群的周期
	Nodes     []*Node `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty"`          // 集群中的节点
	Slots     []*Slot `protobuf:"bytes,5,rep,name=slots,proto3" json:"slots,omitempty"`          // 集群中的槽位
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_pkg_clusterevent_pb_event_proto_rawDescGZIP(), []int{0}
}

func (x *Cluster) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Cluster) GetSlotCount() uint32 {
	if x != nil {
		return x.SlotCount
	}
	return 0
}

func (x *Cluster) GetEpoch() uint32 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *Cluster) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Cluster) GetSlots() []*Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                         // 节点id
	ClusterAddr  string         `protobuf:"bytes,2,opt,name=clusterAddr,proto3" json:"clusterAddr,omitempty"`        // 节点分布式通讯地址
	ApiAddr      string         `protobuf:"bytes,3,opt,name=apiAddr,proto3" json:"apiAddr,omitempty"`                // 节点api地址
	Slots        string         `protobuf:"bytes,4,opt,name=slots,proto3" json:"slots,omitempty"`                    // 节点负责的槽位（也是领导槽位）
	ReplicaSlots string         `protobuf:"bytes,5,opt,name=replicaSlots,proto3" json:"replicaSlots,omitempty"`      // 节点负责的副本槽位（不包含领导槽位）
	Join         bool           `protobuf:"varint,6,opt,name=join,proto3" json:"join,omitempty"`                     // 是否是加入集群的节点，false表示初始节点 true表示加入节点
	Exports      []*SlotMigrate `protobuf:"bytes,7,rep,name=exports,proto3" json:"exports,omitempty"`                // 正在迁移的槽位
	Imports      []*SlotMigrate `protobuf:"bytes,8,rep,name=imports,proto3" json:"imports,omitempty"`                // 正在迁入的槽位
	Status       NodeStatus     `protobuf:"varint,9,opt,name=status,proto3,enum=NodeStatus" json:"status,omitempty"` // 节点状态
	Online       bool           `protobuf:"varint,10,opt,name=online,proto3" json:"online,omitempty"`                // 是否在线
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_pkg_clusterevent_pb_event_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Node) GetClusterAddr() string {
	if x != nil {
		return x.ClusterAddr
	}
	return ""
}

func (x *Node) GetApiAddr() string {
	if x != nil {
		return x.ApiAddr
	}
	return ""
}

func (x *Node) GetSlots() string {
	if x != nil {
		return x.Slots
	}
	return ""
}

func (x *Node) GetReplicaSlots() string {
	if x != nil {
		return x.ReplicaSlots
	}
	return ""
}

func (x *Node) GetJoin() bool {
	if x != nil {
		return x.Join
	}
	return false
}

func (x *Node) GetExports() []*SlotMigrate {
	if x != nil {
		return x.Exports
	}
	return nil
}

func (x *Node) GetImports() []*SlotMigrate {
	if x != nil {
		return x.Imports
	}
	return nil
}

func (x *Node) GetStatus() NodeStatus {
	if x != nil {
		return x.Status
	}
	return NodeStatus_NodeStatusWaitInit
}

func (x *Node) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

type Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                     // 槽位id
	Leader       uint64   `protobuf:"varint,2,opt,name=leader,proto3" json:"leader,omitempty"`             // 槽位的领导节点
	Replicas     []uint64 `protobuf:"varint,3,rep,packed,name=replicas,proto3" json:"replicas,omitempty"`  // 副本节点(包含领导节点)
	Status       uint32   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`             // 槽位状态
	ReplicaCount uint32   `protobuf:"varint,5,opt,name=replicaCount,proto3" json:"replicaCount,omitempty"` // 槽位副本数量  (这个数量包含领导，比如副本为3，则是1个领导2个副本节点)
}

func (x *Slot) Reset() {
	*x = Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slot) ProtoMessage() {}

func (x *Slot) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slot.ProtoReflect.Descriptor instead.
func (*Slot) Descriptor() ([]byte, []int) {
	return file_pkg_clusterevent_pb_event_proto_rawDescGZIP(), []int{2}
}

func (x *Slot) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Slot) GetLeader() uint64 {
	if x != nil {
		return x.Leader
	}
	return 0
}

func (x *Slot) GetReplicas() []uint64 {
	if x != nil {
		return x.Replicas
	}
	return nil
}

func (x *Slot) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *Slot) GetReplicaCount() uint32 {
	if x != nil {
		return x.ReplicaCount
	}
	return 0
}

type SlotMigrate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot   uint32 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`     // 槽位id
	From   uint64 `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`     // 迁移的源节点
	To     uint64 `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`         // 迁移的目标节点
	Status uint32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"` // 迁移状态
}

func (x *SlotMigrate) Reset() {
	*x = SlotMigrate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotMigrate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotMigrate) ProtoMessage() {}

func (x *SlotMigrate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotMigrate.ProtoReflect.Descriptor instead.
func (*SlotMigrate) Descriptor() ([]byte, []int) {
	return file_pkg_clusterevent_pb_event_proto_rawDescGZIP(), []int{3}
}

func (x *SlotMigrate) GetSlot() uint32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *SlotMigrate) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *SlotMigrate) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *SlotMigrate) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

type NodeEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType NodeEventType `protobuf:"varint,1,opt,name=eventType,proto3,enum=NodeEventType" json:"eventType,omitempty"` // 事件类型
	Node      []*Node       `protobuf:"bytes,2,rep,name=node,proto3" json:"node,omitempty"`                               // 对应事件的节点
}

func (x *NodeEvent) Reset() {
	*x = NodeEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeEvent) ProtoMessage() {}

func (x *NodeEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeEvent.ProtoReflect.Descriptor instead.
func (*NodeEvent) Descriptor() ([]byte, []int) {
	return file_pkg_clusterevent_pb_event_proto_rawDescGZIP(), []int{4}
}

func (x *NodeEvent) GetEventType() NodeEventType {
	if x != nil {
		return x.EventType
	}
	return NodeEventType_NodeEventTypeNone
}

func (x *NodeEvent) GetNode() []*Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type SlotEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventType SlotEventType `protobuf:"varint,1,opt,name=eventType,proto3,enum=SlotEventType" json:"eventType,omitempty"` // 事件类型
	Slots     []*Slot       `protobuf:"bytes,2,rep,name=slots,proto3" json:"slots,omitempty"`                             // 对应事件的槽位
	SlotIDs   []uint32      `protobuf:"varint,3,rep,packed,name=slotIDs,proto3" json:"slotIDs,omitempty"`                 // 槽位id集合
}

func (x *SlotEvent) Reset() {
	*x = SlotEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotEvent) ProtoMessage() {}

func (x *SlotEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_clusterevent_pb_event_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotEvent.ProtoReflect.Descriptor instead.
func (*SlotEvent) Descriptor() ([]byte, []int) {
	return file_pkg_clusterevent_pb_event_proto_rawDescGZIP(), []int{5}
}

func (x *SlotEvent) GetEventType() SlotEventType {
	if x != nil {
		return x.EventType
	}
	return SlotEventType_SlotEventTypeNone
}

func (x *SlotEvent) GetSlots() []*Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

func (x *SlotEvent) GetSlotIDs() []uint32 {
	if x != nil {
		return x.SlotIDs
	}
	return nil
}

var File_pkg_clusterevent_pb_event_proto protoreflect.FileDescriptor

var file_pkg_clusterevent_pb_event_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x6b, 0x67, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x2f, 0x70, 0x62, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x91, 0x01, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1b, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0xad, 0x02, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x70, 0x69, 0x41, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c,
	0x6f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53, 0x6c, 0x6f, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x53,
	0x6c, 0x6f, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x6a, 0x6f, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x6c, 0x6f, 0x74,
	0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52, 0x07, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x12, 0x26, 0x0a, 0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x07, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x5d,
	0x0a, 0x0b, 0x53, 0x6c, 0x6f, 0x74, 0x4d, 0x69, 0x67, 0x72, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x54, 0x0a,
	0x09, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x22, 0x70, 0x0a, 0x09, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x2c, 0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x44, 0x73, 0x2a, 0x4f, 0x0a, 0x10, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e,
	0x65, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x10, 0x01, 0x2a, 0x87, 0x01, 0x0a, 0x0d, 0x53, 0x6c, 0x6f, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x6c, 0x6f, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12,
	0x15, 0x0a, 0x11, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x69, 0x74, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x41, 0x64, 0x64, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13,
	0x53, 0x6c, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x6c, 0x6f, 0x74, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x10, 0x04,
	0x2a, 0x6c, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x6f, 0x64, 0x65,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x64, 0x64, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x10, 0x03, 0x2a, 0x38,
	0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x12,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x57, 0x61, 0x69, 0x74, 0x49, 0x6e,
	0x69, 0x74, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x10, 0x01, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_clusterevent_pb_event_proto_rawDescOnce sync.Once
	file_pkg_clusterevent_pb_event_proto_rawDescData = file_pkg_clusterevent_pb_event_proto_rawDesc
)

func file_pkg_clusterevent_pb_event_proto_rawDescGZIP() []byte {
	file_pkg_clusterevent_pb_event_proto_rawDescOnce.Do(func() {
		file_pkg_clusterevent_pb_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_clusterevent_pb_event_proto_rawDescData)
	})
	return file_pkg_clusterevent_pb_event_proto_rawDescData
}

var file_pkg_clusterevent_pb_event_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_pkg_clusterevent_pb_event_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pkg_clusterevent_pb_event_proto_goTypes = []interface{}{
	(ClusterEventType)(0), // 0: ClusterEventType
	(SlotEventType)(0),    // 1: SlotEventType
	(NodeEventType)(0),    // 2: NodeEventType
	(NodeStatus)(0),       // 3: NodeStatus
	(*Cluster)(nil),       // 4: Cluster
	(*Node)(nil),          // 5: Node
	(*Slot)(nil),          // 6: Slot
	(*SlotMigrate)(nil),   // 7: SlotMigrate
	(*NodeEvent)(nil),     // 8: NodeEvent
	(*SlotEvent)(nil),     // 9: SlotEvent
}
var file_pkg_clusterevent_pb_event_proto_depIdxs = []int32{
	5, // 0: Cluster.nodes:type_name -> Node
	6, // 1: Cluster.slots:type_name -> Slot
	7, // 2: Node.exports:type_name -> SlotMigrate
	7, // 3: Node.imports:type_name -> SlotMigrate
	3, // 4: Node.status:type_name -> NodeStatus
	2, // 5: NodeEvent.eventType:type_name -> NodeEventType
	5, // 6: NodeEvent.node:type_name -> Node
	1, // 7: SlotEvent.eventType:type_name -> SlotEventType
	6, // 8: SlotEvent.slots:type_name -> Slot
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_pkg_clusterevent_pb_event_proto_init() }
func file_pkg_clusterevent_pb_event_proto_init() {
	if File_pkg_clusterevent_pb_event_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_clusterevent_pb_event_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_clusterevent_pb_event_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_clusterevent_pb_event_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_clusterevent_pb_event_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotMigrate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_clusterevent_pb_event_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_clusterevent_pb_event_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_clusterevent_pb_event_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_clusterevent_pb_event_proto_goTypes,
		DependencyIndexes: file_pkg_clusterevent_pb_event_proto_depIdxs,
		EnumInfos:         file_pkg_clusterevent_pb_event_proto_enumTypes,
		MessageInfos:      file_pkg_clusterevent_pb_event_proto_msgTypes,
	}.Build()
	File_pkg_clusterevent_pb_event_proto = out.File
	file_pkg_clusterevent_pb_event_proto_rawDesc = nil
	file_pkg_clusterevent_pb_event_proto_goTypes = nil
	file_pkg_clusterevent_pb_event_proto_depIdxs = nil
}
